
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author wuser
 */
public class Ventana extends javax.swing.JFrame {

    ConexionDB cdb = ConexionDB.getInstance();

    public Ventana() {
        initComponents();
        try {
            leertodos();
        } catch (SQLException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Borrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Editar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Consultar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Telefono", "Tipo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton1)
                .addGap(61, 61, 61)
                .addComponent(jButton2)
                .addGap(81, 81, 81)
                .addComponent(jButton4)
                .addGap(63, 63, 63)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nombre = JOptionPane.showInputDialog(this, "Ingrese el nombre");
        String telefono = JOptionPane.showInputDialog(this, "Ingrese el telefono");
        String tipo = JOptionPane.showInputDialog(this, "Ingrese el tipo");
        if (telefono.length() < 10 && telefono.length() > 0 && telefono.matches("^[0-9]*$")) {
            try {
                guardar(nombre, telefono, tipo);
            } catch (SQLException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        eliminar(JOptionPane.showInputDialog(this, "Ingrese el nombre del contacto: "));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            leer();
        } catch (SQLException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String tx = (String) jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 1);
        String nombre = JOptionPane.showInputDialog("this", "Va a actualizar el siguiente campo: Nombre\n Ingrese el nuevo valor");
        String tel = JOptionPane.showInputDialog("this", "Va a actualizar el siguiente campo: Nombre\n Ingrese el nuevo valor");

        String tipo = JOptionPane.showInputDialog("this", "Va a actualizar el siguiente campo: Nombre\n Ingrese el nuevo valor");

        actualizar(nombre,tel,tipo);
    }//GEN-LAST:event_jButton3ActionPerformed
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    public boolean guardar(String nombre, String telefono, String Tipo) throws SQLException {
        String values = "(" + nombre + "," + telefono + "," + "," + getTipo(Tipo) + ")";
        cdb.execute("INSERT INTO tbContactos values" + values);
        JOptionPane.showMessageDialog(this, "Guardado correctamente");
        leertodos();
        return true;
    }

    public String getTipo(String tipo) {
        if (tipo.equals("Trabajo")) {
            return "1";
        } else if (tipo.equals("Escuela")) {
            return "2";
        } else if (tipo.equals("Familia")) {
            return "3";
        }
        return "";
    }

    public String getNombreTipo(String tipo) {
        if (tipo.equals("1")) {
            return "Trabajo";
        } else if (tipo.equals("2")) {
            return "Escuela";
        } else if (tipo.equals("3")) {
            return "Familia";
        }
        return "";
    }

    public boolean leer() throws SQLException {
        String nombre = JOptionPane.showInputDialog(this, "Ingrese el nombre a buscar");
        String n = "\'" + nombre + "\'";
        String qry = "Select * from tbContactos where nombre=" + n;
        ResultSet s = cdb.select(qry);
        if (s.first()) {
            leertodos();
            JOptionPane.showMessageDialog(this, "Encontrado");
            String nomb = "Nombre: " + s.getString(1) + " Telefono: " + s.getString(2) + " Tipo " + getNombreTipo(s.getString(3));
            JOptionPane.showMessageDialog(this, nomb);
        } else {
            JOptionPane.showMessageDialog(this, "No encontrado!");

        }
        return true;
    }

    public boolean eliminar(String nombre) {
        String n = "\'" + nombre + "\'";
        String qry = "delete from tbContactos where nombre = " + n;
        cdb.execute(qry);
        JOptionPane.showMessageDialog(this, "OK");
        return true;

    }

    public boolean actualizar(String nombre, String telefono, String Tipo) {
        String n = "\'" + nombre + "\'";
        String t = "\'" + telefono + "\'";
        Tipo = getTipo(Tipo);
        String ti = "\'" + Tipo + "\'";
        String qry = "update tbContactos set nombre=" + n + ", Telefono =" + t + ", tipo =" + ti + "from tbContactos where nombre =" + n;
        cdb.execute(qry);
        JOptionPane.showMessageDialog(this, "OK");

        return true;
    }

    public boolean leertodos() throws SQLException {
        ArrayList<ArrayList<String>> str = new ArrayList<>();
        ResultSet rsm = cdb.select("SELECT * FROM tbContactos");
        rsm.first();
        ArrayList<String> cl = new ArrayList<>();
        while (rsm.next()) {
            cl.add(rsm.getString(1));
            cl.add(rsm.getString(2));
            cl.add(getNombreTipo(rsm.getString(3)));
            str.add(cl);
            cl.clear();
        }

        String col[] = {"Nombre", "Telefono", "Tipo"};
        String data[][] = new String[str.size()][3];
        for (int i = 0; i < str.size(); i++) {
            for (int j = 0; j < str.get(i).size(); j++) {
                data[i][j] = str.get(i).get(j);
            }
        }
        DefaultTableModel tmodel = new DefaultTableModel(data, col);
        jTable1.setModel(tmodel);
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
